/* You can add global styles to this file, and also import other style files */

// Global styles
html, body {
    height: 100%;
    margin: 0;
    font-family: Roboto, "Helvetica Neue", sans-serif;
}

@mixin hover-effect($bg-color: #f0f0f0, $text-color: #000, $transition-time: 0.3s) {
    transition: background-color $transition-time, color $transition-time;

    &:hover {
        background-color: $bg-color;
        color: $text-color;
    }
}

::ng-deep .tooltip-multiline {
    white-space: pre-line;
}

textarea {
    resize: both;
}

* {
    font-size: large;
}

@media screen and (max-width: 1000px) {
    * {
        font-size: medium;
    }
}

@media screen and (max-width: 650px) {
    * {
        font-size: medium;
    }
}

@media screen and (max-width: 520px) {
    * {
        font-size: small;
    }
}

@media screen and (max-width: 350px) {
    * {
        font-size: small;
        width: fit-content;
    }
}

ul {
    list-style: none;
    // margin-right: 2rem;
    padding-right: 2rem;
}

a {
    text-decoration: none;
}

.box {
    border: 3px solid black;
    // width: fit-content;
    background-color: white;
    border-radius: 10px;
    color: black;

    img {
        border-radius: 10px;
    }

    ul {
        list-style: none;
        margin-right: 30px;

        // margin-top: 20px;
        li {
            margin-top: 10px;
            font-size: large;
        }
    }

    a {
        text-decoration: none;
        font-size: large;
    }
}

.middle {
    margin-left: auto;
    margin-right: auto;
}

.margin-center {
    width: 98%;
    margin: auto;
    margin-top: 2%;
    margin-bottom: 2%;
}

.margin-center-li-center {
    width: 98%;
    margin: auto;
    margin-top: 2%;
    margin-bottom: 2%;
    li {
        text-align: center;
    }
}

.greenHightLight {
    background-color: green;
}

.blueGreenHightLight {
    background-color: rgb(0, 255, 251);
}

.custom-router-link-active {
    border: 1px solid aqua;
    border-radius: 5px;
}

.min-fit {
    min-width: fit-content;
    min-height: fit-content;
    box-sizing: border-box;
}

.min-fit-300px {
    @extend .min-fit;
    max-width: 300px;
    width: 100%;
}

.min-fit-400px {
    @extend .min-fit;
    max-width: 400px;
    width: 100%;
}

.min-fit-500px {
    @extend .min-fit;
    max-width: 500px;
    width: 100%;
}

.min-fit-600px {
    @extend .min-fit;
    max-width: 600px;
    width: 100%;
}

.min-fit-700px {
    @extend .min-fit;
    max-width: 700px;
    width: 100%;
}

.flex-row-container {
    display: flex;
    flex-direction: row;
    /* Items in a row */
    justify-content: flex-start;
    /* Align items to the start */
    align-items: center;
    /* Vertically align items */
    gap: 1rem;
    /* Space between the items */
    flex-wrap: wrap;
}

.flex-row-container-auto {
    display: flex;
    flex-wrap: wrap;  // Allows items to wrap to a new line when needed
    gap: 1rem;        // Adds a 1rem gap between the child elements
}
  
.flex-row-container-auto > * {
    flex: 1 1 auto;   // Makes each child item flexible, allows them to grow and shrink
    min-width: 0;     // Prevents items from overflowing due to content size
}

.flex-row-container-max-content {
    display: flex;
    flex-wrap: wrap;  // Allows items to wrap to a new line when needed
    gap: 1rem;        // Adds a 1rem gap between the child elements
}
  
.flex-row-container-max-content > * {
    flex: 0 1 max-content;  // Makes each child take up its maximum content size and allows wrapping
}

.cursor-hover-change-color {
    &:hover {
        cursor: pointer;
    }

    @include hover-effect(#f0f0f0, #000, 0.3s);
}

.cursor-hover {
    &:hover {
        cursor: pointer;
    }
}

.multiline {
    white-space: pre-wrap;
}